$spacers: (
    0: 0,
    1: .125rem,
    2: .25rem,
    3: .5rem,
    4: .75rem,
    5: 1rem,
    6: 1.25rem,
    7: 1.5rem,
    8: 2rem,
    9: 2.5rem,
	10: 3rem,
	11: 3.75rem,
	12: 4.5rem
);

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
	  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  
	  @each $prop, $abbrev in (margin: m, padding: p) {
		@each $size, $length in $spacers {
		  .-#{$abbrev}-a-#{$size}#{$infix} { #{$prop}: $length !important; }
		  .-#{$abbrev}-t-#{$size}#{$infix},
		  .-#{$abbrev}-v-#{$size}#{$infix} {
			#{$prop}-top: $length !important;
		  }
		  .-#{$abbrev}-r-#{$size}#{$infix},
		  .-#{$abbrev}-h-#{$size}#{$infix} {
			#{$prop}-right: $length !important;
		  }
		  .-#{$abbrev}-b-#{$size}#{$infix},
		  .-#{$abbrev}-v-#{$size}#{$infix} {
			#{$prop}-bottom: $length !important;
		  }
		  .-#{$abbrev}-l-#{$size}#{$infix},
		  .-#{$abbrev}-h-#{$size}#{$infix} {
			#{$prop}-left: $length !important;
		  }
		}
	  }
  
	  // Negative margins (e.g., where `.m-b-n1` is negative version of `.mb-1`)
	  @each $size, $length in $spacers {
		@if $size != 0 {
		  .-m-a-n#{$size}#{$infix} { margin: -$length !important; }
		  .-m-t-n#{$size}#{$infix},
		  .-m-v-n#{$size}#{$infix} {
			margin-top: -$length !important;
		  }
		  .-m-r-n#{$size}#{$infix},
		  .-m-h-n#{$size}#{$infix} {
			margin-right: -$length !important;
		  }
		  .-m-b-n#{$size}#{$infix},
		  .-m-v-n#{$size}#{$infix} {
			margin-bottom: -$length !important;
		  }
		  .-m-l-n#{$size}#{$infix},
		  .-m-h-n#{$size}#{$infix} {
			margin-left: -$length !important;
		  }
		}
	  }
  
	  // Some special margin utils
	  .-m-a-auto#{$infix} { margin: auto !important; }
	  .-m-t-auto#{$infix},
	  .-m-v-auto#{$infix} {
		margin-top: auto !important;
	  }
	  .-m-r-auto#{$infix},
	  .-m-h-auto#{$infix} {
		margin-right: auto !important;
	  }
	  .-m-b-auto#{$infix},
	  .-m-v-auto#{$infix} {
		margin-bottom: auto !important;
	  }
	  .-m-l-auto#{$infix},
	  .-m-h-auto#{$infix} {
		margin-left: auto !important;
	  }
	}
  }
  